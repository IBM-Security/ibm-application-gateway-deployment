# This Kubernetes YAML file creates a deployment, service, and ingress.
# Ingress is https://iag.127.0.0.1.nip.io
#
# This template requires iag configmap and iag secret created by running:
#   create-iag-assets.sh script in the kubernetes directory.
#
# This template requires configuration and assets in iag-config configmap.
# Create with:
#   kubectl create configmap iag-config --from-file=<config-dir>/src

apiVersion: apps/v1
kind: Deployment
metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: iag
    name: iag
spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: iag
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: iag
      spec:
        serviceAccountName: default
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - iag
                topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: LANG
            value: C
          envFrom:
            - configMapRef:
                name: iag
            - secretRef:
                name: iag
          image: docker.io/ibmcom/ibm-application-gateway:21.12
          imagePullPolicy: IfNotPresent
          name: iag
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
          - mountPath: /var/iag/config
            name: iag-config
          - mountPath: /var/iag/config/secret_files
            name: iag-secret-files
          - mountPath: /var/iag/config/env_files
            name: iag-env-files
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: iag-config
          configMap:
            name: iag-config
        - name: iag-secret-files
          secret:
            secretName: iag
        - name: iag-env-files
          configMap:
            name: iag
---
apiVersion: v1
kind: Service
metadata:
    creationTimestamp: null
    name: iag
    labels:
      app: iag
spec:
    ports:
    - name: iag
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      app: iag
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
   name: iag
   annotations:
     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
     nginx.ingress.kubernetes.io/affinity: "cookie"
spec:
  tls:
  - hosts:
    - iag.127.0.0.1.nip.io
  rules:
  - host: iag.127.0.0.1.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: iag
            port:
              number: 443
