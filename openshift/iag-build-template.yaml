apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: ibm-app-gateway-build
  annotations:
    openshift.io/display-name: IBM Application Gateway (Build from Repo)
    iconClass: icon-sso
    description: |
      The IBM Application Gateway (IAG) provides a containerized secure Web Reverse proxy which is designed to sit in front of your application, seamlessly adding authentication and authorization protection to your application.

      This template generates a BuildConfig which downloads and builds from the specified repository and creates an ImageStream for the DeploymentConfig.

      The specified crypto Secret must exist and contain certificate and key concatenated in value of iag.certkey.pem key.
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    lookupPolicy:
      local: true
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
  spec:
    runPolicy: "Serial"
    source:
      git:
        uri: ${GITHUB_REPO}
      contextDir: ${GITHUB_CONTEXT}
      dockerfile: "FROM docker.io/ibmcom/ibm-application-gateway:${IAG_VERSION}\n
        COPY * /var/iag/config/"
    strategy:
      dockerStrategy:
        forcePull: false
    output:
      to:
        kind: "ImageStreamTag"
        name: ${APP_NAME}:current
    triggers:
      - type: ConfigChange
      - type: GitHub
        github:
          secret: ${GITHUB_WEBHOOK_SECRET}
      - type: Generic
        generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      name: ${APP_NAME}
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
        name: ${APP_NAME}
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - ${APP_NAME}
          from:
            kind: ImageStreamTag
            name: '${APP_NAME}:current'
      - type: ConfigChange
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${APP_NAME}
          app: ${APP_NAME}
      spec:
        serviceAccountName: ${SERVICE_ACCOUNT}
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - ${APP_NAME}
                topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: LANG
            value: ${LANGUAGE}
          envFrom:
            - configMapRef:
                name: ${CONFIGMAP_NAME}
            - secretRef:
                name: ${SECRET_NAME}
          image: ${APP_NAME}:current
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
          - mountPath: /var/iag/config/secret_files
            name: ${APP_NAME}-secret-files
          - mountPath: /var/iag/config/env_files
            name: ${APP_NAME}-env-files
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-secret-files
          secret:
            secretName: ${SECRET_NAME}
        - name: ${APP_NAME}-env-files
          configMap:
            name: ${CONFIGMAP_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: ${APP_NAME}
    labels:
      name: ${APP_NAME}
      app: ${APP_NAME}
  spec:
    host: ${DNS_NAME}
    port:
      targetPort: ${APP_NAME}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${APP_NAME}
    labels:
      name: ${APP_NAME}
      app: ${APP_NAME}
  spec:
    ports:
    - name: ${APP_NAME}
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      name: ${APP_NAME}
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - displayName: IAG Version
    description: IAG Version to be deployed
    name: IAG_VERSION
    value: "21.12"
  - displayName: Application Name
    description: Application Name in OpenShift
    name: APP_NAME
    value: iag
  - displayName: DNS Name
    description: Fully Qualified DNS Name for Route (uses a default if left blank)
    name: DNS_NAME
  - displayName: GitHub Repository
    description: GitHub repository where configuration is stored
    name: GITHUB_REPO
    value: https://github.com/jonpharry/iag
  - displayName: GitHub Context Directory
    description: Directory within GitHub repo where config is found
    name: GITHUB_CONTEXT
    value: /configs/hello-world
  - displayName: Secret Name
    description: (Existing) Secret containing sensitive files and variables referenced in config from repo.
    name: SECRET_NAME
    value: iag
  - displayName: ConfigMap Name
    description: (Existing) ConfigMap for files and variables referenced in config from repo.
    name: CONFIGMAP_NAME
    value: iag
  - displayName: Language
    description: Language for log messages (C = English)
    name: LANGUAGE
    value: C
  - displayName: Service Account
    description: Service Account to be used for containers.
    name: SERVICE_ACCOUNT
    value: default
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - description: A secret string used to configure the Generic webhook.
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
