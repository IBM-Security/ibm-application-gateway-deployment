apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: ibm-app-gateway-configmap
  annotations:
    openshift.io/display-name: IBM Application Gateway (ConfigMap)
    iconClass: icon-sso
    description: |
      The IBM Application Gateway (IAG) provides a containerized secure Web Reverse proxy which is designed to sit in front of your application, seamlessly adding authentication and authorization protection to your application.

      This template mounts the specified ConfigMap which must contain required configuration files.  This ConfigMap must exist.  It can be created from a local file using:
        oc create configmap <name> --from-file=<file>

      The specified crypto Secret must exist and contain certificate and key concatenated in value of iag.certkey.pem key.
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ${APP_NAME}
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
      spec:
        serviceAccountName: ${SERVICE_ACCOUNT}
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - ${APP_NAME}
                topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: LANG
            value: ${LANGUAGE}
          envFrom:
            - configMapRef:
                name: ${CONFIGMAP_NAME}
            - secretRef:
                name: ${SECRET_NAME}
          image: docker.io/ibmcom/ibm-application-gateway:${IAG_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
          - mountPath: /var/iag/config
            name: ${APP_NAME}-config
          - mountPath: /var/iag/config/secret_files
            name: ${APP_NAME}-secret-files
          - mountPath: /var/iag/config/env_files
            name: ${APP_NAME}-env-files
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-config
          configMap:
            name: ${CONFIG_MAP}
        - name: ${APP_NAME}-secret-files
          secret:
            secretName: ${SECRET_NAME}
        - name: ${APP_NAME}-env-files
          configMap:
            name: ${CONFIGMAP_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    host: ${DNS_NAME}
    port:
      targetPort: ${APP_NAME}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    ports:
    - name: ${APP_NAME}
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      app: ${APP_NAME}
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - displayName: IAG Version
    description: IAG Version to be deployed
    name: IAG_VERSION
    value: "21.12"
  - displayName: Application Name
    description: Application Name in OpenShift
    name: APP_NAME
    value: iag
  - displayName: DNS Name
    description: Fully Qualified DNS Name for Route (uses default if left blank)
    name: DNS_NAME
  - displayName: Config Map containing configuration
    description: Existing Config Map for configuration
    name: CONFIG_MAP
    value: iag-config
  - displayName: Secret Name
    description: (Existing) Secret containing sensitive files and variables referenced in config.
    name: SECRET_NAME
    value: iag
  - displayName: ConfigMap Name
    description: (Existing) ConfigMap for files and variables referenced in config
    name: CONFIGMAP_NAME
    value: iag
  - displayName: Language
    description: Language for log messages (C = English)
    name: LANGUAGE
    value: C
  - displayName: Service Account
    description: Service Account to be used for containers.
    name: SERVICE_ACCOUNT
    value: default
